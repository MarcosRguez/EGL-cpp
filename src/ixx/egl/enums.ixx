/**
 * @file enums.ixx
 * @author MarcosRguez (alu0101470368@ull.edu.es)
 * @brief
 * @version 0.1
 * @date 21/08/2025
 *
 *
 */
module;
#include <type_traits>
#include <glad/egl.h>
export module egl:enums;
import :utils;
export namespace egl {
enum struct API : EGLenum {
	OPENGL_API = EGL_OPENGL_API,
	OPENGL_ES_API = EGL_OPENGL_ES_API,
	OPENVG_API = EGL_OPENVG_API
};
enum struct APIq : EGLenum {
	NONE = EGL_NONE,
	OPENGL_API = EGL_OPENGL_API,
	OPENGL_ES_API = EGL_OPENGL_ES_API,
	OPENVG_API = EGL_OPENVG_API
};
enum struct Error : EGLenum {
	SUCCESS = EGL_SUCCESS,
	NOT_INITIALIZED = EGL_NOT_INITIALIZED,
	BAD_ACCESS = EGL_BAD_ACCESS,
	BAD_ALLOC = EGL_BAD_ALLOC,
	BAD_ATTRIBUTE = EGL_BAD_ATTRIBUTE,
	BAD_CONTEXT = EGL_BAD_CONTEXT,
	BAD_CONFIG = EGL_BAD_CONFIG,
	BAD_CURRENT_SURFACE = EGL_BAD_CURRENT_SURFACE,
	BAD_DISPLAY = EGL_BAD_DISPLAY,
	BAD_SURFACE = EGL_BAD_SURFACE,
	BAD_MATCH = EGL_BAD_MATCH,
	BAD_PARAMETER = EGL_BAD_PARAMETER,
	BAD_NATIVE_PIXMAP = EGL_BAD_NATIVE_PIXMAP,
	BAD_NATIVE_WINDOW = EGL_BAD_NATIVE_WINDOW,
	CONTEXT_LOST = EGL_CONTEXT_LOST
};
enum struct StringName : EGLint {
	CLIENT_APIS = EGL_CLIENT_APIS,
	VENDOR = EGL_VENDOR,
	VERSION = EGL_VERSION,
	EXTENSIONS = EGL_EXTENSIONS
};
enum struct ReadDraw : EGLenum {
	READ = EGL_READ,
	DRAW = EGL_DRAW
};
enum struct RenderableType : EGLenum {
	OPENGL_BIT = EGL_OPENGL_BIT,
	OPENGL_ES_BIT = EGL_OPENGL_ES_BIT,
	OPENGL_ES2_BIT = EGL_OPENGL_ES2_BIT,
	OPENGL_ES3_BIT = EGL_OPENGL_ES3_BIT,
	OPENVG_BIT = EGL_OPENVG_BIT
};
enum struct SurfaceType : EGLenum {
	WINDOW_BIT = EGL_WINDOW_BIT,
	PIXMAP_BIT = EGL_PIXMAP_BIT,
	PBUFFER_BIT = EGL_PBUFFER_BIT,
	MULTISAMPLE_RESOLVE_BOX_BIT = EGL_MULTISAMPLE_RESOLVE_BOX_BIT,
	SWAP_BEHAVIOR_PRESERVED_BIT = EGL_SWAP_BEHAVIOR_PRESERVED_BIT,
	VG_COLORSPACE_LINEAR_BIT = EGL_VG_COLORSPACE_LINEAR_BIT,
	VG_ALPHA_FORMAT_PRE_BIT = EGL_VG_ALPHA_FORMAT_PRE_BIT
};
} // namespace egl
// namespace egl {
template <>
struct enable_enum_bitwise_ops<egl::RenderableType> : std::true_type {};
template <>
struct enable_enum_bitwise_ops<egl::SurfaceType> : std::true_type {};
// } // namespace egl